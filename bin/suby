#!/usr/bin/env ruby

require_relative '../lib/suby'
require 'optparse'

options = {
  force: false,
  encode: false,
  langext: false,
  langs: [:en],
  downloaders: []
}
option_parser = OptionParser.new do |opts|
  opts.banner = "#{File.basename $0} [options] video"
  opts.separator '  Find and download subtitles for the given video file'
  opts.separator "\nOptions:"

  opts.on '-l', '--lang LANG = en', 'Lang for subtitles separated by comma' do |langs|
    options[:langs] = langs.downcase.split(',').map { |x| x.strip.to_sym }
  end

  opts.on '-d', '--downloader DOWNLOADER', 'Downloader to use (separate with comma)' do |downloader|
    options[:downloaders] = downloader.downcase.split(',').map { |x| x.strip }
  end

  opts.on '-e', '--encode', 'Encode subtitles to utf-8' do
    options[:encode] = true
  end

  opts.on '--show-downloaders', 'Show available downloaders' do
    # TODO: show available downloaders
    puts "Available downloaders:"
    Suby::Manager.new.downloaders.keys.each do |d|
      puts "  #{d.to_s}"
    end
    exit
  end

  opts.on '-x', '--langext', 'Append language code to subtitle\'s filename' do
    options[:langext] = true
  end

  opts.on '-f', '--force', 'Force subtitles download even if already exists' do
    options[:force] = true
  end

  opts.on '-h', '--help', 'Show usage' do
    puts opts
    exit
  end
end

option_parser.parse!

puts option_parser if ARGV.empty?

logger = Logger.new(STDOUT)
logger.formatter = Suby::TerminalLogger.new

s = Suby::Suby.new(options, logger)
s.download_subtitles(ARGV)
